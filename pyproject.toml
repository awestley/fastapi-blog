[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-blog"
version = "0.7.0"
description = "Blogging for FastAPI"
readme = "README.md"
requires-python = ">=3.12"
authors = [
  {name = "Daniel Roy Greenfeld", email = "daniel@feldroy.com"},
]
maintainers = [
  {name = "Daniel Roy Greenfeld", email = "daniel@feldroy.com"},
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Web Environment",  
  "Framework :: FastAPI",
  "License :: Other/Proprietary License",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Text Processing :: Markup :: Markdown",  
]
license = {text = "FSL-1.0-Apache-2.0"}
dependencies = [
  "fastapi>=0.116.2",
  "jinja2>=3.1.6",
  "jinja2-time>=0.2.0",
  "markdown>=3.9",  
  "pyyaml>=6.0.2",
  "pymdown-extensions>=10.16.1",
  "uvicorn>=0.35.0",  
]

[project.optional-dependencies]
dev = [
  "httpx>=0.28.1",
  "ruff>=0.13.0",
  "pytest>=8.4.2",
  "coverage>=7.10.6",
  "mypy>=1.18.1",
  "types-Markdown>=3.9.0",
  "types-PyYAML>=6.0.12.20250915",
]

[project.urls]

bugs = "https://github.com/pydanny/fastapi-blog/issues"
changelog = "https://github.com/pydanny/fastapi-blog/blob/master/changelog.md"
homepage = "https://github.com/pydanny/fastapi-blog"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]


# Mypy
# ----

[tool.mypy]
files = "."
exclude = [
  "tests/*"
]

# Use strict defaults
# strict = true
# warn_unreachable = true
# warn_no_return = true



# Ruff
# ----

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pyupgrade
    "UP",
    # pydocstyle
    "D",
]
ignore = [
    "E501",  # line too long - ruff formatter takes care of this
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # Multi-line docstring summary should start at the second line (conflicts with D212)
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__ files as these are convenience imports
"**/__init__.py" = [ "F401" ]

[tool.ruff.lint.isort]
lines-after-imports = 2
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "project",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"project" = [
    "src",
    "tests",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20


[tool.coverage.run]
source = ["src"]
